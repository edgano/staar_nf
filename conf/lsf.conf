process {
  cache = 'lenient'
  executor = 'lsf'
  shell = ['/bin/bash', '-euo', 'pipefail']

  cpus  =  1
  memory = 6.GB
  time   = 1.h
  queue = 'normal'
  containerOptions = "--containall --bind /tmp --bind /lustre"
        
  errorStrategy = { task.exitStatus in [143,137,104,134,139,140] ? 'retry' : 'finish' }
  maxRetries    = 2
  maxErrors     = '-1'

}

executor {
    name = 'lsf'
    queueSize = 4000
    poolSize = 4
    submitRateLimit = '10 sec'
    killBatchSize = 50
    pollInterval = '10 sec'
    queueStatInterval = '20 sec'
    dumpInterval = '10 sec'
    exitReadTimeout= '10 sec'
    perJobMemLimit=true
}

docker {
  enabled = false
}

singularity {
  enabled     = true
  autoMounts  = true
  cacheDir = '/lustre/scratch118/humgen/resources/containers/'
  runOptions = '--dns 172.18.255.1,172.18.255.2,172.18.255.3'
  envWhitelist = 'HOSTNAME,SSH_CONNECTION,SSH_CLIENT,CVS_RSH,http_proxy,https_proxy,HTTP_PROXY,HTTPS_PROXY'
}
params{
  agdsFiles = '/lustre/scratch119/realdata/mdt2/projects/interval_wgs/final_release_freeze_GDS/gt_phased_Ensembl_regulatory_build/GDS_files/*.gds'
  aGDSdir = '/lustre/scratch119/realdata/mdt2/projects/interval_wgs/analysis/STAARpipeline/data/input_test/agds_dir.Rdata'
  jobNum = '/lustre/scratch119/realdata/mdt2/projects/interval_wgs/analysis/STAARpipeline/data/input_test/jobs_num.Rdata'
  nullModel = '/lustre/scratch119/realdata/mdt2/projects/interval_wgs/analysis/STAARpipeline/results/Null_Model/obj.STAAR.fbc_neut.Rdata'
  nameCatalog = '/lustre/scratch119/realdata/mdt2/projects/interval_wgs/analysis/STAARpipeline/data/input/Annotation_name_catalog.txt'
}